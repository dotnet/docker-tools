# This unofficial template will always run CG in "what if" mode, which will not submit results to the CG. SDL tools may
# also be disabled for testing purposes.
#
# When extending this template, pipelines using a repository resource containing versions files for image caching must
# do the following:
#
# - Do not rely on any source code from the versions repo so as to not circumvent SDL and CG guidelines
# - The versions repo resource must be named `InternalVersionsRepo` or `PublicVersionsRepo` to avoid SDL scans
# - The versions repo must be checked out to `$(Build.SourcesDirectory)/versions` to avoid CG scans
#
# If the pipeline is not using a separate repository resource, ensure that there is no source code checked out in
# `$(Build.SourcesDirectory)/versions`, as it will not be scanned.

parameters:
- name: disableSDL
  type: boolean
  default: false
  displayName: Disable SDL
- name: stages
  type: stageList
  default: []
  # 1ES Pipeline Template parameters
- name: pool
  type: object
  default:
    name: $(default1ESInternalPoolName)
    image: $(default1ESInternalPoolImage)
    os: linux
- name: sourceAnalysisPool
  type: object
  default:
    name: $(defaultSourceAnalysisPoolName)
    image: $(defaultSourceAnalysisPoolImage)
    os: windows

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Unofficial.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool: ${{ parameters.pool }}
    sdl:
      binskim:
        enabled: true
      componentgovernance:
        ignoreDirectories: $(Build.SourcesDirectory)/versions
        whatIf: true
        showAlertLink: true
      enableAllTools: ${{ not(parameters.disableSDL) }}
      policheck:
        enabled: true
      sbom:
        enabled: true
      sourceRepositoriesToScan:
        exclude:
        - repository: InternalVersionsRepo
        - repository: PublicVersionsRepo
      sourceAnalysisPool: ${{ parameters.sourceAnalysisPool }}
      tsa:
        enabled: true
    stages:
    - ${{ each stage in parameters.stages }}:
      - stage: ${{ stage.stage }}
        ${{ each property in stage }}:
          ${{ if notIn(property.key, 'stage', 'jobs') }}:
            ${{ property.key }} : ${{ property.value }}
        jobs:
        - ${{ each job in stage.jobs }}:
          - job: ${{ job.job }}
            ${{ each property in job }}:
              ${{ if notIn(property.key, 'job', 'steps') }}:
                ${{ property.key }} : ${{ property.value }}
            steps:
            - ${{ each step in job.steps }}:
              # Special case for Azure Pipelines checkout task:
              # https://learn.microsoft.com/azure/devops/extend/develop/pipeline-decorator-context?view=azure-devops#task-names-and-guids
              # The checkout task does not have a name - it is special and built directly into the agent. Avoid
              # modifying the checkout task, or else it will show up in the UI as a task with no name.
              - ${{ if contains(step.task, '6d15af64-176c-496d-b583-fd2ae21d4df4') }}:
                - ${{ step }}
              - ${{ else }}:
                - task: ${{ step.task }}
                  ${{ each property in step }}:
                    ${{ if notIn(property.key, 'task', 'displayName') }}:
                      ${{ property.key }} : ${{ property.value }}
                  displayName: ðŸŸª ${{ step.displayName }}
