# Use this Dockerfile to create a runner image
#     docker build -t image-builder .
#     docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v <local path to build>:/repo -w /repo image-builder <image-build args>

# build Microsoft.DotNet.ImageBuilder
FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:8.0-alpine AS build-env
ARG TARGETARCH
WORKDIR /image-builder

# restore packages before copying entire source - provides optimizations when rebuilding
COPY NuGet.config ./
COPY src/Microsoft.DotNet.ImageBuilder.csproj ./src/
RUN dotnet restore -r linux-musl-$TARGETARCH ./src/Microsoft.DotNet.ImageBuilder.csproj

# copy everything else and publish
COPY . ./
RUN dotnet publish -r linux-musl-$TARGETARCH ./src/Microsoft.DotNet.ImageBuilder.csproj --self-contained=true --no-restore -o out


# build runtime image
FROM mcr.microsoft.com/dotnet/runtime-deps:8.0-alpine

# install tooling
RUN apk add --no-cache \
        docker \
        git

# install image-builder
WORKDIR /image-builder
COPY --from=build-env /image-builder/out ./

ENTRYPOINT ["/image-builder/Microsoft.DotNet.ImageBuilder"]
