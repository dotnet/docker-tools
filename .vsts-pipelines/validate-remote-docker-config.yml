pr: none
trigger: none

jobs:
- job: ValidateRemoteDockerConfig
  pool:
    ${{ if eq(variables['System.TeamProject'], 'public') }}:
      name: DotNetCore-Docker-Public
    ${{ if eq(variables['System.TeamProject'], 'internal') }}:
      name: DotNetCore-Docker
    demands:
    - agent.os -equals linux
    - agent.name -equals $(agentName)
  workspace:
    clean: all
  variables:
  - template: variables/docker-images.yml
  - name: remoteDockerRunCmd
    value:
      docker run
      --rm
      --entrypoint docker
      -v /var/run/docker.sock:/var/run/docker.sock
      -v $(DOCKER_CERT_PATH):/docker-certs
      -e DOCKER_CERT_PATH=/docker-certs
      -e DOCKER_TLS_VERIFY=1
      -e DOCKER_HOST=tcp://$(DOCKER_HOST_IP):2376
      $(imageNames.testRunner)
  steps:
  - script: docker pull $(imageNames.testRunner)
    displayName: Pull ImageBuilder
  - script: $(remoteDockerRunCmd) info
    displayName: Validate Remote Docker Daemon Reachability
  - script: |
      if [[ "$(DOCKER_CERT_PATH)" == *"humw"* ]]; then
        echo "##vso[task.setvariable variable=imageNames.pinger]$(imageNames.pinger.linux)"
        echo "##vso[task.setvariable variable=customPingArgs]"
      else
        echo "##vso[task.setvariable variable=imageNames.pinger]$(imageNames.pinger.windows)"
        echo "##vso[task.setvariable variable=customPingArgs]-c 3"
      fi
    displayName: Define OS Variables
  - script: $(remoteDockerRunCmd) pull $(imageNames.pinger)
    displayName: Pull Ping Image
  - script: $(remoteDockerRunCmd) run --rm $(imageNames.pinger) ping $(customPingArgs) www.github.com
    displayName: Validate Remote Docker Daemon Container Network Access
