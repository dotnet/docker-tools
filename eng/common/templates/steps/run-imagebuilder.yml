parameters:
- name: name
  type: string
  default: ""
- name: displayName
  type: string
  default: "Run ImageBuilder"
- name: serviceConnection
  type: string
  default: ""
- name: internalProjectName
  type: string
  default: null
- name: args
  type: string
  default: null
- name: condition
  type: string
  default: succeeded()
- name: continueOnError
  type: boolean
  default: false
- name: dockerClientOS
  type: string
  default: "linux"

steps:
- ${{ if and(eq(variables['System.TeamProject'], parameters.internalProjectName), ne(variables['Build.Reason'], 'PullRequest'), ne(parameters.serviceConnection, '')) }}:
  - task: AzureCLI@2
    ${{ if ne(parameters.name, '') }}:
      name: ${{ parameters.name }}
    displayName: ${{ parameters.displayName }}
    continueOnError: ${{ parameters.continueOnError }}
    condition: ${{ parameters.condition }}
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      addSpnToEnvironment: true
      ${{ if eq(parameters.dockerClientOS, 'windows') }}:
        scriptType: 'ps'
      ${{ else }}:
        scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: >
        $env:idToken | Out-File -FilePath $(tokenHostFilePath);
        $(runAuthedImageBuilderCmd) ${{ parameters.args }};
        Remove-Item -Path $(tokenHostFilePath) -Force
- ${{ else }}:
  - task: PowerShell@2
    ${{ if ne(parameters.name, '') }}:
      name: ${{ parameters.name }}
    displayName: ${{ parameters.displayName }}
    continueOnError: ${{ parameters.continueOnError }}
    condition: ${{ parameters.condition }}
    inputs:
      targetType: 'inline'
      script: >
        $(runImageBuilderCmd) ${{ parameters.args }}
