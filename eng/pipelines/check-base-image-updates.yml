trigger: none
pr: none

schedules:
- cron: "0 0,4,8,12,16,20 * * *"
  displayName: Daily build
  branches:
    include:
    - master
  always: true

variables:
- template: templates/variables/common.yml

jobs:
- job: Get_Stale_Images_Linux_AMD
  pool:
    vmImage: $(defaultLinuxAmd64PoolImage)
  steps:
  - template: templates/steps/get-stale-images.yml
    parameters:
      osType: linux
      architecture: amd64
      dockerClientOS: linux
      staleImagePathsVariableName: linux-amd-stale-image-paths

- job: Get_Stale_Images_Linux_ARM32
  pool:
    name: DotNetCore-Docker
    demands:
    - Agent.OS -equals linux
    - Agent.OSArchitecture -equals ARM64
  steps:
  - template: templates/steps/get-stale-images.yml
    parameters:
      osType: linux
      architecture: arm
      dockerClientOS: linux
      staleImagePathsVariableName: linux-arm32-stale-image-paths

- job: Get_Stale_Images_Linux_ARM64
  pool:
    name: DotNetCore-Docker
    demands:
    - Agent.OS -equals linux
    - Agent.OSArchitecture -equals ARM64
  steps:
  - template: templates/steps/get-stale-images.yml
    parameters:
      osType: linux
      architecture: arm64
      dockerClientOS: linux
      staleImagePathsVariableName: linux-arm64-stale-image-paths

- job: Get_Stale_Images_Windows_AMD
  # Use the most recent Windows version so we can pull all image versions of Windows
  pool:
    name: DotNetCore-Docker
    demands: VSTS_OS -equals Windows_Server_2019_Data_Center_1903
  steps:
  - template: templates/steps/get-stale-images.yml
    parameters:
      osType: windows
      architecture: amd64
      dockerClientOS: windows
      staleImagePathsVariableName: windows-amd-stale-image-paths

- job: Queue_Stale_Image_Builds
  dependsOn:
  - Get_Stale_Images_Linux_AMD
  - Get_Stale_Images_Linux_ARM32
  - Get_Stale_Images_Linux_ARM64
  - Get_Stale_Images_Windows_AMD
  pool:
    vmImage: $(defaultLinuxAmd64PoolImage)
  variables:
    imagePaths1: $[ dependencies.Get_Stale_Images_Linux_AMD.outputs['GetStaleImages.linux-amd-stale-image-paths'] ]
    imagePaths2: $[ dependencies.Get_Stale_Images_Linux_ARM32.outputs['GetStaleImages.linux-arm32-stale-image-paths'] ]
    imagePaths3: $[ dependencies.Get_Stale_Images_Linux_ARM64.outputs['GetStaleImages.linux-arm64-stale-image-paths'] ]
    imagePaths4: $[ dependencies.Get_Stale_Images_Windows_AMD.outputs['GetStaleImages.windows-amd-stale-image-paths'] ]
  steps:
  - template: ../common/templates/steps/init-docker-linux.yml
  - script: >
      $(runImageBuilderCmd)
      queueBuild
      $(System.AccessToken)
      dnceng
      internal
      --subscriptions-path $(checkBaseImageSubscriptionsPath)
      --image-paths "$(imagePaths1)"
      --image-paths "$(imagePaths2)"
      --image-paths "$(imagePaths3)"
      --image-paths "$(imagePaths4)"
    displayName: Queue Build for Stale Images
  - template: ../common/templates/steps/cleanup-docker-linux.yml
