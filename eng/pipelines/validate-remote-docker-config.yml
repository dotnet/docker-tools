pr: none
trigger: none

jobs:
- job: ValidateRemoteDockerConfig
  pool:
    ${{ if eq(variables['System.TeamProject'], 'public') }}:
      name: DotNetCore-Docker-Public
    ${{ if eq(variables['System.TeamProject'], 'internal') }}:
      name: DotNetCore-Docker
    demands:
    - agent.os -equals linux
    - agent.name -equals $(agentName)
  timeoutInMinutes: 15
  workspace:
    clean: all
  variables:
  - template: templates/variables/common.yml
  - name: remoteDockerRunCmd
    value:
      docker run
      --rm
      --entrypoint docker
      -v /var/run/docker.sock:/var/run/docker.sock
      -v $(DOCKER_CERT_PATH):/docker-certs
      -e DOCKER_CERT_PATH=/docker-certs
      -e DOCKER_TLS_VERIFY=1
      -e DOCKER_HOST=tcp://$(DOCKER_HOST_IP):2376
      $(imageNames.testRunner)
  - name: imageNames.pinger.linux
    value: arm32v7/debian:stretch
  steps:
  - script: docker pull $(imageNames.testRunner)
    displayName: Pull ImageBuilder
  - script: $(remoteDockerRunCmd) info
    displayName: Validate Remote Docker Daemon Reachability
  - script: $(remoteDockerRunCmd) pull $(imageNames.pinger.linux)
    displayName: Pull Ping Image
  - script: $(remoteDockerRunCmd) run --rm $(imageNames.pinger.linux) ping -c 3 www.github.com
    displayName: Validate Remote Docker Daemon Container Network Access
